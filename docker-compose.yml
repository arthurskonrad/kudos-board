version: '3'

services:
  proxy:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=example@email.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    labels:
      - "traefik.http.routers.api_http.rule=Host(`proxy.local`)"
      - "traefik.http.routers.api.rule=Host(`proxy.local`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ".docker/config/letsencrypt:/letsencrypt"

  app:
    build:
      context: ./.docker/build/app
      dockerfile: Dockerfile
    volumes:
      - ./vue-project/:/var/www
    command: /bin/sh -c "npm install && npm run format && npm run dev:host"
    tty: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kudosboard.tls=true"
      - "traefik.http.routers.kudosboard.rule=Host(`kudosboard.local`)"
      - "traefik.http.services.web.loadbalancer.server.port=5173"

  mock-api:
    image: muonsoft/openapi-mock
    environment:
      OPENAPI_MOCK_SPECIFICATION_URL: '/var/www/docs.json'
    ports:
      - "8080:8080"
    volumes:
      - .:/var/www/
    working_dir: /var/www/
    tty: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mqm_backend.rule=Host(`${APP_URL}`) && PathPrefix(`${MOCK_API_PATH}`)"
      - "traefik.http.routers.mqm_backend.entrypoints=websecure"
      - "traefik.http.routers.mqm_backend.tls=true"
      - "traefik.http.services.mqm_backend.loadbalancer.server.port=8080"
      - "traefik.http.routers.mqm_backend.middlewares=mqm_strip-api-prefix@docker"
      - "traefik.http.middlewares.mqm_strip-api-prefix.stripprefix.prefixes=${MOCK_API_PATH}"
    depends_on:
      - app
